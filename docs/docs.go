// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/missions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all missions in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "List all missions",
                "responses": {
                    "200": {
                        "description": "List of missions retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.MissionResponseDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new mission in the system along with its targets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Create a new mission",
                "parameters": [
                    {
                        "description": "Mission information with targets",
                        "name": "mission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateMissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mission created successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.MissionCreateResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/missions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed information about a specific mission including its targets and assigned cat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Get a mission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mission retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.MissionResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid mission ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Mission not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update mission information including marking it as completed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Update a mission",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mission update information",
                        "name": "mission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateMissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mission updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.MissionResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid mission ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a mission from the system. A mission cannot be deleted if it is already assigned to a cat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Delete a mission",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mission deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid mission ID, mission assigned to cat, or service error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/missions/{id}/assign-cat": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a spy cat to a specific mission. The mission must not be completed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Assign a cat to a mission",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cat assignment information",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cat assigned to mission successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.MissionResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid mission ID, invalid request body, or business rule violation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/missions/{id}/targets": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new target to an existing mission. A target cannot be added if the mission is already completed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Add a target to a mission",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Target information to add",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AddTargetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Target added to mission successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.TargetResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid mission ID, invalid request body, or business rule violation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/spycats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all spy cats in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Get all spy cats",
                "responses": {
                    "200": {
                        "description": "List of spy cats retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.SpyCatListResponseDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "No spy cats found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new spy cat in the system with the specified attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Create a new spy cat",
                "parameters": [
                    {
                        "description": "Spy Cat information",
                        "name": "cat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SpyCatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Spy cat created successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.SpyCatSingleResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error or service error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove multiple spy cats from the system by their IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Delete multiple spy cats",
                "parameters": [
                    {
                        "description": "Array of spy cat IDs to delete",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.DeleteIds"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Spy cats deleted successfully"
                    },
                    "400": {
                        "description": "Bad request - invalid request body or service error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No spy cats found to delete",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/spycats/{spycatId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed information about a specific spy cat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Get a spy cat by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Spy Cat ID",
                        "name": "spycatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spy cat retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.SpyCatSingleResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID format or service error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Spy cat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a spy cat from the system by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Delete a spy cat",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Spy Cat ID",
                        "name": "spycatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spy cat deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID format or service error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Spy cat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the salary of an existing spy cat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Update spy cat salary",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Spy Cat ID",
                        "name": "spycatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New salary information",
                        "name": "salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SalaryUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salary updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Cat"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID format, invalid salary, or service error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Spy cat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/targets/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update target information including marking it as completed. Notes cannot be updated if either the target or the mission is completed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Update a target",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Target update information",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateTargetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Target updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.TargetResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid target ID, invalid request body, or business rule violation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a target from a mission. A target cannot be deleted if it is already completed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Delete a target",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Target deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid target ID or business rule violation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AddTargetRequest": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "dtos.CatDTO": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "experience_years": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                }
            }
        },
        "dtos.CreateMissionRequest": {
            "type": "object",
            "properties": {
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TargetDTO"
                    }
                }
            }
        },
        "dtos.DeleteIds": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.MissionCreateResponseDTO": {
            "type": "object",
            "properties": {
                "complete_state": {
                    "$ref": "#/definitions/models.CompleteState"
                },
                "id": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TargetDTO"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.MissionResponseDTO": {
            "type": "object",
            "properties": {
                "cat": {
                    "$ref": "#/definitions/dtos.CatDTO"
                },
                "cat_id": {
                    "type": "string"
                },
                "complete_state": {
                    "$ref": "#/definitions/models.CompleteState"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TargetResponseDTO"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.SalaryUpdateRequest": {
            "type": "object",
            "properties": {
                "salary": {
                    "type": "number"
                }
            }
        },
        "dtos.SpyCatListResponseDTO": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "experience_years": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                }
            }
        },
        "dtos.SpyCatRequest": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "experience_years": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                }
            }
        },
        "dtos.SpyCatSingleResponseDTO": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "experience_years": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.TargetDTO": {
            "type": "object",
            "properties": {
                "complete_state": {
                    "$ref": "#/definitions/models.CompleteState"
                },
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.TargetResponseDTO": {
            "type": "object",
            "properties": {
                "complete_state": {
                    "$ref": "#/definitions/models.CompleteState"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mission_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateMissionRequest": {
            "type": "object",
            "properties": {
                "complete_state": {
                    "$ref": "#/definitions/models.CompleteState"
                }
            }
        },
        "dtos.UpdateTargetRequest": {
            "type": "object",
            "properties": {
                "complete_state": {
                    "$ref": "#/definitions/models.CompleteState"
                },
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "models.Cat": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string"
                },
                "experience_years": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CompleteState": {
            "type": "string",
            "enum": [
                "in_progress",
                "completed"
            ],
            "x-enum-varnames": [
                "InProgress",
                "Completed"
            ]
        }
    },
    "tags": [
        {
            "description": "Operations for managing spy cats in the system",
            "name": "Cats"
        },
        {
            "description": "Operations for managing missions and their targets",
            "name": "Missions"
        },
        {
            "description": "Operations for managing mission targets",
            "name": "Targets"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Spy Cat Agency API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
